name: docker-rocketchat

on:
  release:
    types: [published]
  pull_request:
    branches: '**'
  push:
    branches:
      - develop
  workflow_dispatch:

env:
  CI: true
  MONGO_URL: mongodb://localhost:27017
  TOOL_NODE_FLAGS: --max_old_space_size=4096

jobs:
  build-image-pr:
    runs-on: ubuntu-latest
    if: github.event.pull_request.head.repo.full_name == github.repository

    steps:
    - uses: actions/checkout@v2

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
          registry: registry.gitlab.com
          username: ${{ secrets.GITLAB_USERNAME }}
          password: ${{ secrets.GITLAB_PASSWORD }}

    - name: Free disk space
      run: |
        sudo swapoff -a
        sudo rm -f /swapfile
        sudo apt clean
        docker rmi $(docker image ls -aq)
        df -h

    - name: Cache node modules
      id: cache-nodemodules
      uses: actions/cache@v2
      with:
        path: node_modules
        key: ${{ runner.OS }}-node_modules-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('.github/workflows/build_and_test.yml') }}

    - name: Cache meteor local
      uses: actions/cache@v2
      with:
        path: ./.meteor/local
        key: ${{ runner.OS }}-meteor_cache-${{ hashFiles('.meteor/versions') }}-${{ hashFiles('.github/workflows/build_and_test.yml') }}

    - name: Cache meteor
      uses: actions/cache@v2
      with:
        path: ~/.meteor
        key: ${{ runner.OS }}-meteor-${{ hashFiles('.meteor/release') }}-${{ hashFiles('.github/workflows/build_and_test.yml') }}

    - name: Use Node.js 12.21.0
      uses: actions/setup-node@v2
      with:
        node-version: "12.21.0"

    - name: Install Meteor
      run: |
        # Restore bin from cache
        set +e
        METEOR_SYMLINK_TARGET=$(readlink ~/.meteor/meteor)
        METEOR_TOOL_DIRECTORY=$(dirname "$METEOR_SYMLINK_TARGET")
        set -e
        LAUNCHER=$HOME/.meteor/$METEOR_TOOL_DIRECTORY/scripts/admin/launch-meteor
        if [ -e $LAUNCHER ]
        then
          echo "Cached Meteor bin found, restoring it"
          sudo cp "$LAUNCHER" "/usr/local/bin/meteor"
        else
          echo "No cached Meteor bin found."
        fi

        # only install meteor if bin isn't found
        command -v meteor >/dev/null 2>&1 || curl https://install.meteor.com | sed s/--progress-bar/-sL/g | /bin/sh

    - name: Versions
      run: |
        npm --versions
        node -v
        meteor --version
        meteor npm --versions
        meteor node -v
        git version

    - name: npm install
      if: steps.cache-nodemodules.outputs.cache-hit != 'true'
      run: |
        meteor npm install

    # To reduce memory need during actual build, build the packages solely first
    # - name: Build a Meteor cache
    #   run: |
    #     # to do this we can clear the main files and it build the rest
    #     echo "" > server/main.js
    #     echo "" > client/main.js
    #     sed -i.backup 's/rocketchat:livechat/#rocketchat:livechat/' .meteor/packages
    #     meteor build --server-only --debug --directory /tmp/build-temp
    #     git checkout -- server/main.js client/main.js .meteor/packages

    - name: Build Rocket.Chat
      run: |
        meteor build --server-only --directory /tmp/build-pr

    - name: Build Docker image for PRs
      run: |
        cd /tmp/build-pr

        LOWERCASE_REPOSITORY=$(echo "${{ github.repository_owner }}" | tr "[:upper:]" "[:lower:]")
        IMAGE_NAME="ghcr.io/${LOWERCASE_REPOSITORY}/rocket.chat:pr-${{ github.event.number }}"

        echo "Build official Docker image ${IMAGE_NAME}"

        docker build -f $GITHUB_WORKSPACE/.docker/Dockerfile -t $IMAGE_NAME .
        docker push $IMAGE_NAME